apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  creationTimestamp: null
  name: weave-gitops-enterprise
  namespace: flux-system
spec:
  chart:
    spec:
      chart: mccp
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: weave-gitops-enterprise-charts
        namespace: flux-system
      version: 0.36.0
  install:
    crds: CreateReplace
  interval: 1h0m0s
  upgrade:
    crds: CreateReplace
  values:
    monitoring:
      enabled: true # enable it if you want to expose a monitoring server
      service:
        name: monitoring
        port: 9090 # port to expose the monitoring server
      metrics:
        enabled: true # enable it to expose a prometheus metrics endpoint in `/metrics`
      profiling:
        enabled: true # enable it to expose a pprof debug endpoint  `/debug/pprof`
    extraEnvVars:
      - name: WEAVE_GITOPS_FEATURE_OIDC_BUTTON_LABEL
        value: "Login with Okta"
    cluster-controller:
      controllerManager:
        manager:
          image:
            repository: docker.io/weaveworks/cluster-controller
            tag: v1.5.2
      enabled: true
      fullnameOverride: cluster
    config:
      oidc:
        clientCredentialsSecret: oidc-auth
        enabled: true
        issuerURL: https://dev-43978658.okta.com
        redirectURL: https://18.236.84.90:33001/oauth2/callback
    enablePipelines: true
    gitopssets-controller:
      controllerManager:
        manager:
          args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          - --enabled-generators=GitRepository,Cluster,PullRequests,List,APIClient,Matrix,Config
      enabled: true
    global: {}
    service:
      port: 8000
#    additionalArgs:
#      - --route-prefix=/ww
    ingress:
      enabled: true
      hosts:
      - host: ""
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: clusters-service
              port:
                number: 8000
    tls:
      enabled: false
status: {}
